minikube start --memory=5120
eval $(minikube docker-env)

cd istio-example/warmup_exercise
cd install_istio

kubectl apply -f 1-istio-init.yaml
kubectl get po -n istio-system

kubectl apply -f 2-istio-minikube-reduced.yaml
kubectl get po -n istio-system

kubectl apply -f 3-kiali-secret.yaml

kubectl label namespace default istio-injection=enabled

minikube tunnel
EXTERNAL_IP=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
echo "$EXTERNAL_IP minikube.me" | sudo tee -a /etc/hosts
cat /etc/hosts

kubectl get svc -n istio-system -l istio=ingressgateway
EXTERNAL_IP=$(kubectl get svc -n istio-system \
  -l app=istio-ingressgateway \
  -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}')

cd istio-mastery
kubectl apply -f resource-manifests/kube
kubectl get po

kubectl apply -f resource-manifests/istio/http-gateway.yaml

kubectl apply -f resource-manifests/istio/sa-virtualservice-external.yaml

kubectl port-forward \
    $(kubectl get pod -n istio-system -l app=kiali \
    -o jsonpath='{.items[0].metadata.name}') \
    -n istio-system 20001
http://localhost:20001/

kubectl -n istio-system port-forward \
    $(kubectl -n istio-system get pod -l app=grafana \
    -o jsonpath={.items[0].metadata.name}) 3000
http://localhost:3000

while true; do \
curl -d '{"sentence":"I love Jogobella!"}' \
-H "Content-Type: application/json" \
-X POST http://$EXTERNAL_IP/sentiment; \
sleep .8; done

kubectl port-forward -n istio-system \
    $(kubectl get pod -n istio-system -l app=jaeger \
    -o jsonpath='{.items[0].metadata.name}') 16686
http://localhost:16686

kubectl apply -f resource-manifests/kube/ab-testing/sa-frontend-green-deployment.yaml

curl --silent http://$EXTERNAL_IP/ | tr '"' '\n' | grep main
curl --silent http://$EXTERNAL_IP/ | tr '"' '\n' | grep main

kubectl apply -f resource-manifests/istio/ab-testing/destinationrule-sa-frontend.yaml

curl --silent -H "version: yogo" http://$EXTERNAL_IP/ | tr '"' '\n' | grep main

kubectl delete -f resource-manifests/kube/ab-testing/sa-frontend-green-deployment.yaml

kubectl apply -f resource-manifests/kube/shadowing/sa-logic-service-buggy.yaml

kubectl get pods -l app=sa-logic --show-labels

kubectl apply -f resource-manifests/istio/shadowing/sa-logic-subsets-destinationrule.yaml

kubectl apply -f resource-manifests/istio/shadowing/sa-logic-subsets-shadowing-vs.yaml

while true; do curl -v http://$EXTERNAL_IP/sentiment \
    -H “Content-type: application/json” \
    -d ‘{“sentence”: “I love yogobella”}’; \
    sleep .8; done

kubectl apply -f resource-manifests/istio/canary/sa-logic-subsets-canary-vs.yaml

while true; do \
   curl -i http://$EXTERNAL_IP/sentiment \
   -H “Content-type: application/json” \
   -d ‘{“sentence”: “I love yogobella”}’ \
   --silent -w “Time: %{time_total}s \t Status: %{http_code}\n” \
   -o /dev/null; sleep .1; done

kubectl apply -f resource-manifests/istio/retries/sa-logic-retries-timeouts-vs.yaml

kubectl delete deployment sa-logic-buggy
kubectl delete virtualservice sa-logic

eval $(minikube docker-env --unset)
minikube delete
