[Service Mesh]
note: kubectl get deployment sample-deployment -o yaml | istioctl kube-inject -f - | kubectl apply -f -

minikube start --memory=4096 --cpus=4 --vm-driver=virtualbox
minikube start --memory=4096 --vm-driver=virtualbox
minikube start --memory=8192 --cpus=4 --vm-driver=virtualbox (if pod status is "pending", use kubectl describe po to see if memory insufficient)
minikube status
eval $(minikube docker-env)

curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.4 sh -

for i in istio-1.4.2/install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done

kubectl apply -f istio-1.4.2/install/kubernetes/istio-demo.yaml

kubectl -n istio-system wait --timeout=600s --for=condition=available deployment --all

kubectl -n istio-system apply -f kubernetes/istio/setup/kiali-configmap.yml && \
kubectl -n istio-system delete pod -l app=kiali && \
kubectl -n istio-system wait --timeout=60s --for=condition=ready pod -l app=kiali

{service-name}.{namespace}.svc.cluster.local

minikube tunnel (need restart from time to time)

INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

echo "$INGRESS_HOST minikube.me" | sudo tee -a /etc/hosts
cat /etc/hosts

curl -o /dev/null -s -L -w "%{http_code}" http://kiali.istio-system.svc.cluster.local:20001/kiali/
curl -o /dev/null -s -L -w "%{http_code}" http://grafana.istio-system.svc.cluster.local:3000
curl -o /dev/null -s -L -w "%{http_code}" http://jaeger-query.istio-system.svc.cluster.local:16686

./gradlew build && docker-compose build

kubectl delete namespace aepa-k8s
kubectl create namespace aepa-k8s
kubectl config set-context $(kubectl config current-context) --namespace=aepa-k8s

kubectl delete namespace hands-on
kubectl create namespace hands-on
kubectl config set-context $(kubectl config current-context) --namespace=hands-on

./kubernetes/scripts/deploy-dev-env.sh

kubectl get po

/test-all.sh

[other bonus from minkube tunnel]
curl -k http://product-composite.aepa-k8s.svc.cluster.local:4004/actuator/health
mysql -umysql-user-dev -pmysql-pwd-dev review-db -e "select * from reviews" -h mysql.aepa-k8s.svc.cluster.local
mongo --host mongodb.aepa-k8s.svc.cluster.local -u mongodb-user-dev -p mongodb-pwd-dev --authenticationDatabase admin product-db --eval "db.products.find()"
mongo --host mongodb.aepa-k8s.svc.cluster.local -u mongodb-user-dev -p mongodb-pwd-dev --authenticationDatabase admin recommendation-db --eval "db.recommendation.find()"
http://rabbitmq.aepa-k8s.svc.cluster.local:15672
rabbit-user-dev/rabbit-pwd-dev

kubectl get deployment auth-server product product-composite recommendation review -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl wait --timeout=120s --for=condition=Ready pod --all

HOST=minikube.me PORT=443 ./test-all.sh

kubectl get deployment auth-server -n aepa-k8s -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment product -n aepa-k8s -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment recommendation -n aepa-k8s -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment review -n aepa-k8s -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment product-composite -n aepa-k8s -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -

kubectl get deployment auth-server -n hands-on -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment product -n hands-on -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment recommendation -n hands-on -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment review -n hands-on -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
kubectl get deployment product-composite -n hands-on -o yaml | ./istioctl kube-inject -f - | kubectl apply -f -
