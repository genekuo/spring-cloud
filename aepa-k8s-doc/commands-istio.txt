
minikube start --memory=5120 (if pod status is "pending", use kubectl describe po to see if memory insufficient)
minikube start --memory=6144

eval $(minikube docker-env)

kubectl apply -f 1-istio-init.yaml
kubectl get po -n istio-system

kubectl apply -f 2-istio-minikube-reduced.yaml
kubectl get po -n istio-system

kubectl apply -f 3-kiali-secret.yaml

./gradlew build && docker-compose build

kubectl create namespace aepa-k8s
kubectl config set-context $(kubectl config current-context) --namespace=aepa-k8s

kubectl describe ns aepa-k8s
kubectl label namespace aepa-k8s istio-injection=enabled

./kubernetes/scripts/deploy-dev-env.sh
kubectl get po

minikube tunnel

INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

echo "$INGRESS_HOST minikube.me" | sudo tee -a /etc/hosts
cat /etc/hosts

curl -o /dev/null -s -L -w "%{http_code}" http://kiali.istio-system.svc.cluster.local:20001/kiali/
curl -o /dev/null -s -L -w "%{http_code}" http://grafana.istio-system.svc.cluster.local:3000
curl -o /dev/null -s -L -w "%{http_code}" http://jaeger-query.istio-system.svc.cluster.local:16686

/test-all.sh

curl -k http://product-composite.aepa-k8s.svc.cluster.local:4004/actuator/health
mysql -umysql-user-dev -pmysql-pwd-dev review-db -e "select * from reviews" -h mysql.aepa-k8s.svc.cluster.local
mongo --host mongodb.aepa-k8s.svc.cluster.local -u mongodb-user-dev -p mongodb-pwd-dev --authenticationDatabase admin product-db --eval "db.products.find()"
mongo --host mongodb.aepa-k8s.svc.cluster.local -u mongodb-user-dev -p mongodb-pwd-dev --authenticationDatabase admin recommendation-db --eval "db.recommendation.find()"
http://rabbitmq.aepa-k8s.svc.cluster.local:15672
rabbit-user-dev/rabbit-pwd-dev

ACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)
curl -ks https://minikube.me/product-composite/2 -H "Authorization: Bearer $ACCESS_TOKEN" | jq .productId

HOST=minikube.me PORT=443 ./test-all.sh
