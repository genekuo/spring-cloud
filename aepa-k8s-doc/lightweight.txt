brew install siege
[ubuntu]
sudo apt install siege

minikube start --memory=5120
minikube start --memory=5120 --cpus=4 --disk-size=25g
eval $(minikube docker-env)

[update process: change code -> build and docker-compose -> kubectl rollout restart deploy <service>]

./gradlew build && docker-compose build

kubectl create namespace hands-on
kubectl config set-context $(kubectl config current-context) --namespace=hands-on

kubectl create configmap config-repo --from-file=config-repo/ --save-config

kubectl create secret generic config-server-secrets --from-literal=ENCRYPT_KEY=my-very-secure-encrypt-key --from-literal=SPRING_SECURITY_USER_NAME=dev-usr --from-literal=SPRING_SECURITY_USER_PASSWORD=dev-pwd --save-config
kubectl create secret generic config-client-credentials --from-literal=CONFIG_SERVER_USR=dev-usr --from-literal=CONFIG_SERVER_PWD=dev-pwd --save-config
history -c; history -w

docker pull mysql:5.7
docker pull mongo:3.6.9
docker pull rabbitmq:3.7.8-management
docker pull openzipkin/zipkin:2.12.9

[6m40s]
kubectl apply -k kubernetes/services/overlays/dev
kubectl wait --timeout=600s --for=condition=ready pod --all

kubectl get pods -o json | jq .items[].spec.containers[].image

[DEV Testing]
HOST=$(minikube ip) PORT=31443 ./test-all.sh

kubectl delete namespace hands-on

[Staging and Prod]
eval $(minikube docker-env)
docker-compose up -d mongodb mysql rabbitmq

docker tag hands-on/auth-server hands-on/auth-server:v1
docker tag hands-on/config-server hands-on/config-server:v1
docker tag hands-on/gateway hands-on/gateway:v1
docker tag hands-on/product-composite-service hands-on/product-composite-service:v1
docker tag hands-on/product-service hands-on/product-service:v1
docker tag hands-on/recommendation-service hands-on/recommendation-service:v1
docker tag hands-on/review-service hands-on/review-service:v1

kubectl create namespace hands-on
kubectl config set-context $(kubectl config current-context) --namespace=hands-on

kubectl create configmap config-repo --from-file=config-repo/ --save-config

kubectl create secret generic config-server-secrets --from-literal=ENCRYPT_KEY=my-very-secure-encrypt-key --from-literal=SPRING_SECURITY_USER_NAME=prod-usr --from-literal=SPRING_SECURITY_USER_PASSWORD=prod-pwd --save-config

kubectl create secret generic config-client-credentials --from-literal=CONFIG_SERVER_USR=prod-usr --from-literal=CONFIG_SERVER_PWD=prod-pwd --save-config

history -c; history -w

[4m30s]
kubectl apply -k kubernetes/services/overlays/prod
kubectl wait --timeout=600s --for=condition=ready pod --all
kubectl get pods -o json | jq .items[].spec.containers[].image
docker-compose ps

HOST=$(minikube ip) PORT=31443 ./test-all.sh

[Rolling upgrade]
kubectl get pod -l app=product -o jsonpath='{.items[*].spec.containers[*].image} '

docker tag hands-on/product-service:v1 hands-on/product-service:v2

siege https://$(minikube ip):31443/actuator/health -d1 -c1

kubectl get pod -l app=product -w

change to: image: hands-on/product-service:v2
kubectl apply -k kubernetes/services/overlays/prod

kubectl get pod -l app=product -o jsonpath='{.items[*].spec.containers[*].image}'

[Rolling back]
kubectl set image deployment/product pro=hands-on/product-service:v3

kubectl rollout history deployment product

kubectl rollout history deployment product --revision=2

kubectl rollout undo deployment product --to-revision=2

kubectl get pod -l app=product -o jsonpath='{.items[*].spec.containers[*].image}'

[Clean up]
kubectl delete namespace hands-on
eval $(minikube docker-env)
docker-compose down
